# basic compose structure

networks:
  api:
  db:
    
services:
  api:
    container_name: api
    depends_on:
      db-migrate:
        condition: service_completed_successfully
    environment: 
      AGIFY_URL:       "${AGIFY_URL:?}"
      COMPLETER_TOKEN: "${COMPLETER_TOKEN}"
      DB_CONN:         "postgres://${DB_USERNAME:?}:${DB_PASSWORD:?}@db:5432/${DB_NAME:?}"
      DEBUG:           "${DEBUG}"
      GENDERIZE_URL:   "${GENDERIZE_URL:?}"
      LOG_LEVEL:       "${LOG_LEVEL:?}"
      NATIONALIZE_URL: "${NATIONALIZE_URL:?}"
      TIMEOUT_READ:    "${TIMEOUT_READ:?}"
      TIMEOUT_WRITE:   "${TIMEOUT_WRITE:?}"
    networks:
      - api
      - db
    profiles:
      - prod
      - dev
    restart: unless-stopped
      
  db:
    container_name: person-db
    environment:
      PGPASSWORD:        "${DB_PASSWORD:?}"
      POSTGRES_DB:       "${DB_NAME:?}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:?}"
      POSTGRES_USER:     "${DB_USERNAME:?}"
      TZ:                "Europe/Moscow"
    expose:
      - 5432
    healthcheck:
      interval: 3s
      retries: 2
      start_period: 5s
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_NAME:?}", "-U", "${DB_USERNAME}" ]
      timeout: 3s
    networks:
      - db
    profiles:
      - prod
      - dev
      - db-test
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d:ro

  db-migrate:
    command: -path /migrations/ -database postgres://${DB_USERNAME:?}:${DB_PASSWORD:?}@db:5432/${DB_NAME:?}?sslmode=disable up
    container_name: person-migrate
    depends_on:
      db:
        condition: service_healthy
        restart: true
    image: migrate/migrate:4
    networks:
      - db
    profiles:
      # no need to run for db-test - the test image runs migrations on its own
      - prod
      - dev
