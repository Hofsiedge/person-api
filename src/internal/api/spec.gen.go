// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
