// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"5X8DAAD//42eMJnoGwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
